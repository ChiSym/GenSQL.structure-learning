schema: '2.0'
stages:
  preprocess:
    cmd: "poetry run preprocess --data data/data.csv --output data/preprocessed.csv
      --column_model_output data/column_models.json --sql \"SELECT CASE rxarm WHEN
      'A' THEN 'Assigned endocrine therapy alone' WHEN 'B' THEN 'Randomized to endocrine
      therapy alone' WHEN 'C' THEN 'Randomized to chemo + endocrine therapy' WHEN
      'D' THEN 'Assigned chemo + endocrine therapy' ELSE NULL END as treatment_assignment,
      CASE ChemRegGp WHEN '1CMF' THEN 'CMF' WHEN '2Anthracycline w/o Taxane' THEN
      'Anthracycline' WHEN '3Anthracycline and Taxane' THEN 'Anthracycline and Taxane'
      WHEN '4TC and variations' THEN 'TC' ELSE NULL END as chemotherapy, CASE WHEN
      TypeEndocrine IN ('AI', 'OFS & AI', 'Tam & AI') THEN 'Yes' ELSE 'No' END as
      endocrine_therapy_ai, CASE WHEN TypeEndocrine IN ('OFS', 'OFS & AI') THEN 'Yes'
      ELSE 'No' END as endocrine_therapy_ofs, CASE WHEN TypeEndocrine IN ('Tam', 'Tam
      & AI') THEN 'Yes' ELSE 'No' END as endocrine_therapy_tam, meno as menopausal_status,
      RS as genetic_recurrence_score, CASE age WHEN 'NA' THEN NULL ELSE CAST (age
      AS FLOAT) END as age, CASE WHEN ethnicity = 1 THEN 'Hispanic' WHEN race = 1
      THEN 'White' WHEN race = 3 THEN 'Black' WHEN race = 4 THEN 'Asian' WHEN race
      = 5 THEN 'Native Hawaiian or Pacific Islander' WHEN race = 6 THEN 'Native American'
      WHEN race = 7 THEN 'Multirace' ELSE NULL END as race_ethnicity, CASE TumorSize
      WHEN 'NA' THEN NULL ELSE CAST (TumorSize AS FLOAT) END as tumor_size, CASE Grade
      WHEN 'NA' THEN NULL ELSE Grade END as tumor_grade, CASE NucGrade WHEN 'NA' THEN
      NULL ELSE NucGrade END as nuclear_grade, CASE PRStatus WHEN 'NA' THEN NULL ELSE
      PRStatus END as progesterone_receptor_status, CASE PrimSurg WHEN 'Mx' THEN 'Mastectomy'
      WHEN 'Tx' THEN 'Breast conservation' ELSE NULL END as primary_surgical_procedure,
      dfs as disease_free_survival, CASE survstat WHEN 1 THEN 'dead' WHEN 0 THEN 'alive'
      ELSE NULL END as survival_status, CASE rfiind WHEN 1 THEN 'recurrence' WHEN
      0 THEN 'no recurrence' ELSE NULL END as recurrence_indicator, CASE drfiind WHEN
      1 THEN 'distant recurrence' WHEN 0 THEN 'no distant recurrence' ELSE NULL END
      as distant_recurrence_indicator FROM data WHERE inel = 0\"\n"
    deps:
    - path: data/data.csv
      hash: md5
      md5: 934f3db330d8af2c7e0e5b136725b09b
      size: 1852524
    outs:
    - path: data/column_models.json
      hash: md5
      md5: 472f567886d298704abc034421d0ff9c
      size: 2517
    - path: data/preprocessed.csv
      hash: md5
      md5: e78dc14ab06b70415d65a81c6c77b473
      size: 1542279
  create-column-models:
    cmd: "poetry run create-column-models --data data/preprocessed.csv --output data/column_models.json\n"
    deps:
    - path: data/preprocessed.csv
      hash: md5
      md5: b853bf59d00f3208387d92747ab15340
      size: 51991
    outs:
    - path: data/column_models.json
      hash: md5
      md5: e8b9c31c41b2cb967afc14be76e6b4d6
      size: 3350
  loom-schema:
    cmd: "poetry run loom_schema --column_models data/column_models.json --output
      data/loom-schema.json\n"
    deps:
    - path: data/column_models.json
      hash: md5
      md5: 472f567886d298704abc034421d0ff9c
      size: 2517
    outs:
    - path: data/loom-schema.json
      hash: md5
      md5: f0cc883d91a6a0e9100c94e157ab02c7
      size: 550
  loom-ingest:
    cmd: ./bin/loom_task ingest loom data/loom-schema.json data/preprocessed.csv
    deps:
    - path: data/loom-schema.json
      hash: md5
      md5: f0cc883d91a6a0e9100c94e157ab02c7
      size: 550
    - path: data/preprocessed.csv
      hash: md5
      md5: e78dc14ab06b70415d65a81c6c77b473
      size: 1542279
    outs:
    - path: loom/ingest
      hash: md5
      md5: c830ec841404a2a613aba83cc0a00714.dir
      size: 395290
      nfiles: 7
    - path: loom/query
      hash: md5
      md5: f827898720c78f69a7bf2f7e4af56f18.dir
      size: 106
      nfiles: 1
  loom-infer-config:
    cmd: "yq -o=json '.loom' params.yaml > data/infer-config.json\n"
    outs:
    - path: data/infer-config.json
      hash: md5
      md5: 7bfa48d1c7e0424347627214eb648adf
      size: 153
  loom-infer:
    cmd: ./bin/loom_task infer loom 10 data/infer-config.json
    deps:
    - path: data/infer-config.json
      hash: md5
      md5: 7bfa48d1c7e0424347627214eb648adf
      size: 153
    - path: loom/ingest
      hash: md5
      md5: c830ec841404a2a613aba83cc0a00714.dir
      size: 395290
      nfiles: 7
    - path: loom/query
      hash: md5
      md5: f827898720c78f69a7bf2f7e4af56f18.dir
      size: 106
      nfiles: 1
    params:
      params.yaml:
        sample_count: 10
    outs:
    - path: loom/samples
      hash: md5
      md5: 5e5d430086dbdc040f4e7dfc62889ad0.dir
      size: 106852267
      nfiles: 190
  loom-sample:
    cmd: "./bin/loom python scripts/loom_sample.py --sample_count 10000 --output data/synthetic-data-loom.csv\n"
    deps:
    - path: loom/samples
      hash: md5
      md5: 5e5d430086dbdc040f4e7dfc62889ad0.dir
      size: 106852267
      nfiles: 190
    - path: scripts/loom_sample.py
      hash: md5
      md5: d6449af8a6b43427f73f6ff14a87aec7
      size: 1290
    outs:
    - path: data/synthetic-data-loom.csv
      hash: md5
      md5: c5ce57beec160d81c0809847f8960473
      size: 1943631
  loom-dump-metadata:
    cmd: "find loom/samples -type f ! -name '*.json' | parallel --verbose \"./bin/loom
      python scripts/loom_to_json.py loom_to_json {}\"\n"
    deps:
    - path: loom/samples
      hash: md5
      md5: eda41ef5ea950d8392cd4b1f2643f09f.dir
      size: 1162419
      nfiles: 42
    params:
      params.yaml:
        parallel.flags: --verbose
  loom_to_cgpm:
    cmd: "poetry run loom_to_cgpm --column_model_filename data/column_models.json
      --loom_filename loom/samples/sample.0/model.json\n"
    deps:
    - path: data/column_models.json
      hash: md5
      md5: 586ef82a47f37b4a71cbeee054acccac
      size: 3367
    - path: loom/samples
      hash: md5
      md5: eda41ef5ea950d8392cd4b1f2643f09f.dir
      size: 1162419
      nfiles: 42
  marginal-fits-loom:
    cmd: "mkdir -p qc/marginals && poetry run marginal_fits --real_data data/preprocessed.csv
      --model loom  --column_models data/column_models.json\n"
    deps:
    - path: data/preprocessed.csv
      hash: md5
      md5: e78dc14ab06b70415d65a81c6c77b473
      size: 1542279
    - path: data/synthetic-data-loom.csv
      hash: md5
      md5: c5ce57beec160d81c0809847f8960473
      size: 1943631
    outs:
    - path: qc/marginals/loom_1d_fits.csv
      hash: md5
      md5: 75b994e886904bc36ec6e44968f16f49
      size: 938
    - path: qc/marginals/loom_2d_fits.csv
      hash: md5
      md5: 4871ebae900699248cf9c2f9b61a66a4
      size: 12694
    - path: qc/marginals/loom_worst_1d_fit.html
      hash: md5
      md5: 7176d39796fc3a5db0618f96ab40b18c
      size: 3641262
    - path: qc/marginals/loom_worst_1d_fit.png
      hash: md5
      md5: edf84df4169cac48ff502891ef9c3346
      size: 117157
    - path: qc/marginals/loom_worst_2d_fit.html
      hash: md5
      md5: f516c80ab7d308f05ceebcfab9f56d6e
      size: 3974645
    - path: qc/marginals/loom_worst_2d_fit.png
      hash: md5
      md5: 5ef421da202b7508c1a323016e6a313a
      size: 76259
  loom-to-json:
    cmd: "find loom/samples -type f ! -name '*.json' | parallel  \"./bin/loom python
      scripts/loom_to_json.py loom_to_json {}\"\n"
    deps:
    - path: loom/samples
      hash: md5
      md5: 5e5d430086dbdc040f4e7dfc62889ad0.dir
      size: 106852267
      nfiles: 190
  loom-to-cgpm:
    cmd: "mkdir -p data/cgpm/hydrated && ls loom/samples | parallel  \"poetry run
      loom_to_cgpm --column_model_filename data/column_models.json --data_filename
      data/preprocessed.csv --loom_folder loom/samples/{} --out_filename data/cgpm/hydrated/{}.json\"\
      \n"
    deps:
    - path: data/column_models.json
      hash: md5
      md5: 472f567886d298704abc034421d0ff9c
      size: 2517
    - path: data/preprocessed.csv
      hash: md5
      md5: e78dc14ab06b70415d65a81c6c77b473
      size: 1542279
    - path: loom/samples
      hash: md5
      md5: 5e5d430086dbdc040f4e7dfc62889ad0.dir
      size: 106852267
      nfiles: 190
    outs:
    - path: data/cgpm/hydrated
      hash: md5
      md5: 59494553f76206ed36e7dfa6389086c7.dir
      size: 3873928
      nfiles: 10
  cgpm-hydrated-sample:
    cmd: "poetry run cgpm-sample --sample_count 10000 --output data/synthetic-data-cgpm-raw.csv
      --model_dir data/cgpm/hydrated --data data/preprocessed.csv\n"
    deps:
    - path: data/cgpm/hydrated
      hash: md5
      md5: 59494553f76206ed36e7dfa6389086c7.dir
      size: 3873928
      nfiles: 10
    outs:
    - path: data/synthetic-data-cgpm-raw.csv
      hash: md5
      md5: 9e4fd5d7b0e29dabdf34c04cee803d76
      size: 2124657
  marginal-fits-cgpm-raw:
    cmd: "mkdir -p qc/marginals && poetry run marginal_fits --real_data data/preprocessed.csv
      --model cgpm-raw  --column_models data/column_models.json\n"
    deps:
    - path: data/preprocessed.csv
      hash: md5
      md5: e78dc14ab06b70415d65a81c6c77b473
      size: 1542279
    - path: data/synthetic-data-cgpm-raw.csv
      hash: md5
      md5: 9e4fd5d7b0e29dabdf34c04cee803d76
      size: 2124657
    outs:
    - path: qc/marginals/cgpm-raw_1d_fits.csv
      hash: md5
      md5: 4e3a63f5bd3fa7445db16c543f86b96d
      size: 938
    - path: qc/marginals/cgpm-raw_2d_fits.csv
      hash: md5
      md5: 54b9a10b57b7650188c222ceecd8f2c0
      size: 12743
    - path: qc/marginals/cgpm-raw_worst_1d_fit.html
      hash: md5
      md5: 702b1ec4c7debcd46da0950c9a13d039
      size: 3640007
    - path: qc/marginals/cgpm-raw_worst_1d_fit.png
      hash: md5
      md5: 762a9f16db91fede8b96f74e7a33e330
      size: 109764
    - path: qc/marginals/cgpm-raw_worst_2d_fit.html
      hash: md5
      md5: 9f6d42aa9a8b6d99c16bf66bfe1b0553
      size: 4638312
    - path: qc/marginals/cgpm-raw_worst_2d_fit.png
      hash: md5
      md5: 2476a1d69c1b1048ce95f87c830e399b
      size: 116147
