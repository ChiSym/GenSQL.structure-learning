schema: '2.0'
stages:
  preprocess:
    cmd: "poetry run preprocess --data data/data.csv --output data/preprocessed.csv
      --column_model_output data/column_models.json --sql \"SELECT CASE rxarm WHEN
      'A' THEN 'Assigned endocrine therapy alone' WHEN 'B' THEN 'Randomized to endocrine
      therapy alone' WHEN 'C' THEN 'Randomized to chemo + endocrine therapy' WHEN
      'D' THEN 'Assigned chemo + endocrine therapy' ELSE NULL END as treatment_assignment,
      CASE ChemRegGp WHEN '1CMF' THEN 'CMF' WHEN '2Anthracycline w/o Taxane' THEN
      'Anthracycline' WHEN '3Anthracycline and Taxane' THEN 'Anthracycline and Taxane'
      WHEN '4TC and variations' THEN 'TC' ELSE NULL END as chemotherapy, CASE WHEN
      TypeEndocrine IN ('AI', 'OFS & AI', 'Tam & AI') THEN 'Yes' ELSE 'No' END as
      endocrine_therapy_ai, CASE WHEN TypeEndocrine IN ('OFS', 'OFS & AI') THEN 'Yes'
      ELSE 'No' END as endocrine_therapy_ofs, CASE WHEN TypeEndocrine IN ('Tam', 'Tam
      & AI') THEN 'Yes' ELSE 'No' END as endocrine_therapy_tam, meno as menopausal_status,
      RS as genetic_recurrence_score, CASE age WHEN 'NA' THEN NULL ELSE CAST (age
      AS FLOAT) END as age, CASE WHEN ethnicity = 1 THEN 'Hispanic' WHEN race = 1
      THEN 'White' WHEN race = 3 THEN 'Black' WHEN race = 4 THEN 'Asian' WHEN race
      = 5 THEN 'Native Hawaiian or Pacific Islander' WHEN race = 6 THEN 'Native American'
      WHEN race = 7 THEN 'Multirace' ELSE NULL END as race_ethnicity, CASE TumorSize
      WHEN 'NA' THEN NULL ELSE CAST (TumorSize AS FLOAT) END as tumor_size, CASE Grade
      WHEN 'NA' THEN NULL ELSE Grade END as tumor_grade, CASE NucGrade WHEN 'NA' THEN
      NULL ELSE NucGrade END as nuclear_grade, CASE PRStatus WHEN 'NA' THEN NULL ELSE
      PRStatus END as progesterone_receptor_status, CASE PrimSurg WHEN 'Mx' THEN 'Mastectomy'
      WHEN 'Tx' THEN 'Breast conservation' ELSE NULL END as primary_surgical_procedure,
      dfs as disease_free_survival, CASE survstat WHEN 1 THEN 'dead' WHEN 0 THEN 'alive'
      ELSE NULL END as survival_status, CASE rfiind WHEN 1 THEN 'recurrence' WHEN
      0 THEN 'no recurrence' ELSE NULL END as recurrence_indicator, CASE drfiind WHEN
      1 THEN 'distant recurrence' WHEN 0 THEN 'no distant recurrence' ELSE NULL END
      as distant_recurrence_indicator FROM data WHERE inel = 0\"\n"
    deps:
    - path: data/data.csv
      hash: md5
      md5: 934f3db330d8af2c7e0e5b136725b09b
      size: 1852524
    outs:
    - path: data/column_models.json
      hash: md5
      md5: 248068287f48c356472777cc66925702
      size: 2517
    - path: data/preprocessed.csv
      hash: md5
      md5: e78dc14ab06b70415d65a81c6c77b473
      size: 1542279
  create-column-models:
    cmd: "poetry run create-column-models --data data/preprocessed.csv --output data/column_models.json\n"
    deps:
    - path: data/preprocessed.csv
      hash: md5
      md5: b853bf59d00f3208387d92747ab15340
      size: 51991
    outs:
    - path: data/column_models.json
      hash: md5
      md5: e8b9c31c41b2cb967afc14be76e6b4d6
      size: 3350
  loom-schema:
    cmd: "poetry run loom_schema --column_models data/column_models.json --output
      data/loom-schema.json\n"
    deps:
    - path: data/column_models.json
      hash: md5
      md5: 248068287f48c356472777cc66925702
      size: 2517
    outs:
    - path: data/loom-schema.json
      hash: md5
      md5: f0cc883d91a6a0e9100c94e157ab02c7
      size: 550
  loom-ingest:
    cmd: ./bin/loom_task ingest loom data/loom-schema.json data/preprocessed.csv
    deps:
    - path: data/loom-schema.json
      hash: md5
      md5: f0cc883d91a6a0e9100c94e157ab02c7
      size: 550
    - path: data/preprocessed.csv
      hash: md5
      md5: e78dc14ab06b70415d65a81c6c77b473
      size: 1542279
    outs:
    - path: loom/ingest
      hash: md5
      md5: aa89248fa61c2419b94b78cbebf7c492.dir
      size: 395290
      nfiles: 7
    - path: loom/query
      hash: md5
      md5: 85aed627b5ef0e4c54023dff29295ab3.dir
      size: 106
      nfiles: 1
  loom-infer-config:
    cmd: "yq -o=json '.loom' params.yaml > data/infer-config.json\n"
    outs:
    - path: data/infer-config.json
      hash: md5
      md5: 7f928ec52cc41312803872ea38fbf3d2
      size: 152
  loom-infer:
    cmd: ./bin/loom_task infer loom 10 data/infer-config.json
    deps:
    - path: data/infer-config.json
      hash: md5
      md5: 7f928ec52cc41312803872ea38fbf3d2
      size: 152
    - path: loom/ingest
      hash: md5
      md5: aa89248fa61c2419b94b78cbebf7c492.dir
      size: 395290
      nfiles: 7
    - path: loom/query
      hash: md5
      md5: 85aed627b5ef0e4c54023dff29295ab3.dir
      size: 106
      nfiles: 1
    params:
      params.yaml:
        sample_count: 10
    outs:
    - path: loom/samples
      hash: md5
      md5: 88fc75e61ae25311f7baded15625f28e.dir
      size: 10357748
      nfiles: 112
  loom-sample:
    cmd: "./bin/loom python scripts/loom_sample.py --sample_count 10000 --output data/synthetic-data-loom.csv\n"
    deps:
    - path: loom/samples
      hash: md5
      md5: 88fc75e61ae25311f7baded15625f28e.dir
      size: 10357748
      nfiles: 112
    - path: scripts/loom_sample.py
      hash: md5
      md5: d6449af8a6b43427f73f6ff14a87aec7
      size: 1290
    outs:
    - path: data/synthetic-data-loom.csv
      hash: md5
      md5: f0571777f7b9bd01657d12bba3b2c5e8
      size: 1940396
  loom-dump-metadata:
    cmd: "find loom/samples -type f ! -name '*.json' | parallel --verbose \"./bin/loom
      python scripts/loom_to_json.py loom_to_json {}\"\n"
    deps:
    - path: loom/samples
      hash: md5
      md5: eda41ef5ea950d8392cd4b1f2643f09f.dir
      size: 1162419
      nfiles: 42
    params:
      params.yaml:
        parallel.flags: --verbose
  loom_to_cgpm:
    cmd: "poetry run loom_to_cgpm --column_model_filename data/column_models.json
      --loom_filename loom/samples/sample.0/model.json\n"
    deps:
    - path: data/column_models.json
      hash: md5
      md5: 586ef82a47f37b4a71cbeee054acccac
      size: 3367
    - path: loom/samples
      hash: md5
      md5: eda41ef5ea950d8392cd4b1f2643f09f.dir
      size: 1162419
      nfiles: 42
  marginal-fits-loom:
    cmd: "mkdir -p qc/marginals && poetry run marginal_fits --real_data data/preprocessed.csv
      --model loom  --column_models data/column_models.json\n"
    deps:
    - path: data/preprocessed.csv
      hash: md5
      md5: e78dc14ab06b70415d65a81c6c77b473
      size: 1542279
    - path: data/synthetic-data-loom.csv
      hash: md5
      md5: f0571777f7b9bd01657d12bba3b2c5e8
      size: 1940396
    outs:
    - path: qc/marginals/loom_1d_fits.csv
      hash: md5
      md5: b2c9fcab553d7c5021c5200a11f6a4d8
      size: 937
    - path: qc/marginals/loom_2d_fits.csv
      hash: md5
      md5: 0bcdcd91d9980a1247b640eea2a8c1c4
      size: 12685
    - path: qc/marginals/loom_worst_1d_fit.html
      hash: md5
      md5: 1e104ed4cd7a02f4a3b1251958eaa1d5
      size: 3640161
    - path: qc/marginals/loom_worst_1d_fit.png
      hash: md5
      md5: f5d47286c9e3612c7bf9e97c62434bb5
      size: 101569
    - path: qc/marginals/loom_worst_2d_fit.html
      hash: md5
      md5: 688e7c784c767580a83b4ea9ca253a24
      size: 3907198
    - path: qc/marginals/loom_worst_2d_fit.png
      hash: md5
      md5: 0cae8cd23127a4a2ebe6b62cdd893c96
      size: 96790
  loom-to-json:
    cmd: "find loom/samples -type f ! -name '*.json' | parallel  \"./bin/loom python
      scripts/loom_to_json.py loom_to_json {}\"\n"
    deps:
    - path: loom/samples
      hash: md5
      md5: 4b161cc9ecf0e70eb46f732847a14dfd.dir
      size: 52280630
      nfiles: 182
  loom-to-cgpm:
    cmd: "mkdir -p data/cgpm/hydrated && ls loom/samples | parallel  \"poetry run
      loom_to_cgpm --column_model_filename data/column_models.json --data_filename
      data/preprocessed.csv --loom_folder loom/samples/{} --out_filename data/cgpm/hydrated/{}.json\"\
      \n"
    deps:
    - path: data/column_models.json
      hash: md5
      md5: 248068287f48c356472777cc66925702
      size: 2517
    - path: data/preprocessed.csv
      hash: md5
      md5: e78dc14ab06b70415d65a81c6c77b473
      size: 1542279
    - path: loom/samples
      hash: md5
      md5: 4b161cc9ecf0e70eb46f732847a14dfd.dir
      size: 52280630
      nfiles: 182
    outs:
    - path: data/cgpm/hydrated
      hash: md5
      md5: cdd48e1552a0c1d8e4cf9d42012da4f3.dir
      size: 10764041
      nfiles: 10
  cgpm-hydrated-sample:
    cmd: "poetry run cgpm-sample --sample_count 10000 --output data/synthetic-data-cgpm-raw.csv
      --model_dir data/cgpm/hydrated --data data/preprocessed.csv\n"
    deps:
    - path: data/cgpm/hydrated
      hash: md5
      md5: cdd48e1552a0c1d8e4cf9d42012da4f3.dir
      size: 10764041
      nfiles: 10
    outs:
    - path: data/synthetic-data-cgpm-raw.csv
      hash: md5
      md5: bb50fffe5dc39b26c637dfa252326882
      size: 2126807
  marginal-fits-cgpm-raw:
    cmd: "mkdir -p qc/marginals && poetry run marginal_fits --real_data data/preprocessed.csv
      --model cgpm-raw  --column_models data/column_models.json\n"
    deps:
    - path: data/preprocessed.csv
      hash: md5
      md5: e78dc14ab06b70415d65a81c6c77b473
      size: 1542279
    - path: data/synthetic-data-cgpm-raw.csv
      hash: md5
      md5: bb50fffe5dc39b26c637dfa252326882
      size: 2126807
    outs:
    - path: qc/marginals/cgpm-raw_1d_fits.csv
      hash: md5
      md5: 54b805228a6b8e9bee4c94962392e493
      size: 938
    - path: qc/marginals/cgpm-raw_2d_fits.csv
      hash: md5
      md5: f5765d2bbcbdd5cf4f7598d1c0d79269
      size: 12679
    - path: qc/marginals/cgpm-raw_worst_1d_fit.html
      hash: md5
      md5: 4be77d9b0b69ba30569012488d956baf
      size: 4402982
    - path: qc/marginals/cgpm-raw_worst_1d_fit.png
      hash: md5
      md5: 61cb7e802519356e225afa61166df82b
      size: 218453
    - path: qc/marginals/cgpm-raw_worst_2d_fit.html
      hash: md5
      md5: 9405ca191b468568d9309abfa8954d70
      size: 4583594
    - path: qc/marginals/cgpm-raw_worst_2d_fit.png
      hash: md5
      md5: 977465aee2517bfaebc19bee8c849279
      size: 156865
