stages:
  validate-column-names:
    cmd: bin/validate.sh
    deps:
      - data/data.csv
    outs:
      - data/validated.csv
  nullify:
    cmd: >
      clojure -X inferenceql.auto-modeling.main/nullify
      < data/validated.csv
      > data/nullified.csv
    deps:
      - data/data.csv
    params:
      - nullify
    outs:
      - data/nullified.csv

  guess-schema:
    cmd: >
      clojure -X inferenceql.auto-modeling.main/guess-schema
      < data/nullified.csv
      > data/schema.edn
    deps:
      - data/nullified.csv
    params:
      - schema
    outs:
      - data/schema.edn

  ignore:
    cmd: >
      clojure -X inferenceql.auto-modeling.main/ignore
      :schema '"data/schema.edn"'
      < data/nullified.csv
      > data/ignored.csv
    deps:
      - data/nullified.csv
      - data/schema.edn
    outs:
      - data/ignored.csv

  clojurecat-config:
    cmd: >
      clojure -X inferenceql.auto-modeling.clojurecat/config
      :iterations $(bin/param clojurecat.iterations)
      > data/clojurecat-config.edn
    params:
      - clojurecat.iterations
    outs:
      - data/clojurecat-config.edn

  clojurecat:
    cmd: >
      mkdir -p data/xcat/samples &&
      seq 0 $(($(bin/param sample_count) - 1)) | parallel $(bin/param parallel.flags)
      'clojure -M -m inferenceql.inference.scripts.clojurecat
      -c data/clojurecat-config.edn
      -d data/ignored.csv
      -s data/schema.edn
      -o data/xcat/samples/sample{}.edn'
    deps:
      - data/clojurecat-config.edn
      - data/ignored.csv
      - data/schema.edn
    outs:
      - data/xcat/samples

  clojurecat-merge:
    cmd: >
      clj -X inferenceql.auto-modeling.clojurecat/merge
      :models data/xcat/samples
      :out data/xcat/ensemble.edn
    deps:
      - data/xcat/samples
    outs:
      - data/xcat/ensemble.edn

  clojurecat-sample:
    cmd: >
      clojure -X inferenceql.auto-modeling.qc.samples/sample-xcat
      :model data/xcat/ensemble.edn
      :data data/ignored.csv
      :sample-count $(bin/param qc.sample_count || echo nil)
      > qc/samples/samples-virtual.edn
    deps:
      - data/xcat/ensemble.edn
      - data/ignored.csv
    params:
      - qc.sample_count
    outs:
      - qc/samples/samples-virtual.edn

  qc-tag-samples:
    cmd: >
      clojure -X inferenceql.auto-modeling.qc.samples/tag
      :data data/ignored.csv
      :schema data/schema.edn
      :samples-virtual qc/samples/samples-virtual.edn
      > qc/samples/samples.edn
    deps:
      - data/ignored.csv
      - data/schema.edn
      - qc/samples/samples-virtual.edn
      - src/inferenceql/auto_modeling/qc/samples.clj
    outs:
      - qc/samples/samples.edn

  qc-dashboard-spec:
    cmd: >
      clojure -X inferenceql.auto-modeling.qc.dashboard/spec
      :samples qc/samples/samples.edn
      :schema data/schema.edn
      > qc/specs/qc-dashboard.vl.json
    params:
      - qc.columns
    deps:
      - qc/samples/samples.edn
      - data/schema.edn
      - src/inferenceql/auto_modeling/qc/dashboard.clj
      - src/inferenceql/auto_modeling/qc/util.clj
    outs:
      - qc/specs/qc-dashboard.vl.json

  qc-dashboard-app:
    cmd: >
      clojure -X inferenceql.auto-modeling.qc.app/create
      :template qc/templates/index.html
      :spec qc/specs/qc-dashboard.vl.json
      :renderer canvas
      :title '"QC dashboard"'
      > qc/app/qc-dashboard.html
    deps:
      - qc/templates/index.html
      - qc/specs/qc-dashboard.vl.json
      - src/inferenceql/auto_modeling/qc/app.clj
    outs:
      - qc/app/qc-dashboard.html

  qc-splom-spec:
    cmd: >
      clojure -X inferenceql.auto-modeling.qc.splom/spec
      :samples qc/samples/samples.edn
      :schema data/schema.edn
      > qc/specs/qc-splom.vl.json
    params:
      - qc.columns
    deps:
      - qc/samples/samples.edn
      - data/schema.edn
      - src/inferenceql/auto_modeling/qc/splom.clj
      - src/inferenceql/auto_modeling/qc/util.clj
    outs:
      - qc/specs/qc-splom.vl.json

  qc-splom-app:
    cmd: >
      clojure -X inferenceql.auto-modeling.qc.app/create
      :template qc/templates/index.html
      :spec qc/specs/qc-splom.vl.json
      :renderer canvas
      :title '"QC scatter plot matrix"'
      > qc/app/qc-splom.html
    deps:
      - qc/templates/index.html
      - qc/specs/qc-splom.vl.json
      - src/inferenceql/auto_modeling/qc/app.clj
    outs:
      - qc/app/qc-splom.html
